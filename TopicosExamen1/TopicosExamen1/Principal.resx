<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAA8LDA0MCg8NDA0REA8SFyYZFxUVFy8iJBwmODE7OjcxNjU9
        RVhLPUFUQjU2TWlOVFteY2RjPEpsdGxgc1hhY1//2wBDARARERcUFy0ZGS1fPzY/X19fX19fX19fX19f
        X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX1//wAARCADSANIDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD0SiiigAooooAKKKKACiiigAooooAKKKa7KqlmYKoGSScAUALR
        WJqnibTNMC73edmGQIV3D8+lRW3i7SJiUlklt5AfuSxnJ+mM5oHY6ClrPt9Z024x5V7Fk9Ax2H8jir9A
        haKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACmuyqpZiABySe1QX17b2Fs09y+
        1BwB1LHsAO5rgNd1rUdTvPsMMUqKxwIEGWbvz6n9B7mgLHSan4qtbctFZFJ5AMmQtiNR6k9/69sniuZu
        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
        RRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQB/9k=
</value>
  </data>
</root>